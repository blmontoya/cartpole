[workspace]
channels = ["https://prefix.dev/conda-forge"]
name = "cartpole"
platforms = ["linux-64"]
version = "0.1.0"

#### Base Bare Bones Environment

[dependencies] # Global dependencies across all environments
python = "==3.11"
pip = ">=25.1.1,<26"
hatchling = ">=1.27.0,<2"
numpy = ">=1.26.4,<3"
matplotlib = ">=3.10.3,<4"
jupyter = ">=1.1.1,<2"
ipywidgets = ">=8.1.7,<9"
tensorboard = ">=2.20.0,<3"
gymnasium = ">=0.29.1,<1"
safetensors = ">=0.6.2,<0.7"

[feature.cpu]
[feature.cpu.dependencies]
python = "==3.11"  # Ensure no conflicts
pytorch-cpu = ">=2.7.0,<3"
torchvision = ">=0.22.0,<0.23.0"
imageio = ">=2.37.0,<3"
scikit-image = ">=0.25.2,<0.26"

[tasks]
gitmod = "git submodule update --init --recursive"
[target.unix.activation]
scripts = ["scripts/post-install.bash"] # pip  install the package in editable mode

#### All possible environment combinations
[environments]
default = ["cpu"]
cpu = { features = ["cpu"] } # All you need for bare-bones
test = { features = ["test", "cpu"] } # This environment is relied upon by default by the CI

## The following environment combinations are optional and can safely be removed if not needed.
gpu = { features = ["gpu", ] }
test-gpu = { features = ["gpu", "test", ] }

#### Test Environment----------------------------------------------------------------------------
# This environment is relied upon by default by the CI in .github/workflows/pre-commit.yml
[feature.test.dependencies]
pytest = ">=7.0.0"
pre-commit = ">=3.6.0"
[feature.test.tasks]
lint = "pre-commit run --all-files --show-diff-on-failure"
test = "python -m pytest test/* -v"

#### GPU Environment-----------------------------------------------------------------------------
[feature.gpu]
# Channels would go here.
[feature.gpu.system-requirements]
# Thank you to Matthew Feickert for the system requirements tip!
# https://pixi.sh/latest/workspace/system_requirements/
# https://matthewfeickert-talks.github.io/reproducible-ml-for-scientists-with-pixi-scipy-2025/cuda-conda
cuda   = "12"
[feature.gpu.dependencies]
# For a different CUDA version change here and the torch/torchvision versions below accordingly
# Or, use the included docker and develop scripts to get a virtualized compatible CUDA env
cuda-version = "==12.6"
pytorch-gpu = ">=2.7.0,<3"
torchvision = ">=0.22.0,<0.23.0"
imageio = ">=2.37.0,<3"
scikit-image = ">=0.25.2,<0.26"

[feature.gpu.pypi-dependencies]
# Special thank you to @MiroPsota for these wheels
# https://github.com/facebookresearch/pytorch3d/discussions/1752?
pytorch3d = { version = "==0.7.8+pt2.7.0cu126", index = "https://miropsota.github.io/torch_packages_builder" }
